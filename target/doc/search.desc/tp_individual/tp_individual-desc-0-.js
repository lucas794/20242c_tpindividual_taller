searchState.loadedDescShard("tp_individual", 0, "This function checks if the table selected in the query is …\nExecutes the main logical problem of the program\ncheck if the number of arguments is valid\nrepresentation of the condition that can be used on a query\nFor now we only support int &amp; string.\nrepresentation of the type of value can be used for …\ngiven a condition, it will evaluate if the condition is met\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ngiven a condition as STR it will return if the condition …\nPrivate function that help to check if conditions are met.\nSelect representation for the SQL query\nGiven a table, columns, conditions and sorting method\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA valid select query contains SELECT and FROM AND ends …\nA valid INSERT query contains INSERT INTO and VALUES AND …\nA valid UPDATE query contains UPDATE and SET AND ends with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven a SQL Consult, we extract the conditions as string.\nGiven a SQL Consult, we extract the columns and values for …\nThis one is tricky.\nGiven a SQL Consult, we extract the columns as vector of …\nGiven a query, we extract the ORDER BY columns and if they …\nExtracts the position from a QUERY to get the table name\nGiven a SQL Consult, we extract the table name as string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven a parsed ORDER by clause (previously filtered with …\nHelper to extract the conditions from the splitted line\nReturns the argument unchanged.\ngets the columns of the table as string\nReturns the directory where the file is located Example: …\nGet the file name of the table\nFunction that handles the insert query\nCalls <code>U::from(self)</code>.\nThe approach in this work is to avoid reading the whole …\ngiven a columns and values as Vec of String\ngiven the columns of table, conditions as str and a …\nFunction that handles the resolve of the update query")